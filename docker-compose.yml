services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: prod-postgres-1
    restart: always
    environment:
      POSTGRES_PASSWORD: MyPassword#!  # Ensure this matches the password used in your backend configuration
    ports:
      - "8010:8010"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'config_file=/var/lib/postgresql/data/postgresql.conf'
    networks:
      compose_network:
        ipv4_address: 172.27.0.100

  backend:
    image: prod-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      compose_network:
        ipv4_address: 172.27.0.3
    ports:
      - "3009:3009"
    volumes:
      - backend_data:/backend_volume
      -  /home/dev1/prod/keys:/keys
    restart: always
    environment:
      NODE_ENV: "production"
      DB_HOST: "172.27.0.100"
      DB_PORT: 8010
      DB_USER: "postgres"
      DB_PASSWORD: "MyPassword#!"  # Ensure this matches the password used in PostgreSQL service
      DB_NAME: "ngnair_db"
      JWT_PRIVATE_KEY_PATH: "/keys/ngnair_ec_private.pem"
      JWT_PUBLIC_KEY_PATH: "/keys/ngnair_ec_public.pem"
    depends_on:
      - postgres

  frontend:
    image: prod-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      compose_network:
        ipv4_address: 172.27.0.2
    ports:
      - "4173:4173"
    volumes:
      - frontend_data:/frontend_volume
    restart: always
    environment:
      NODE_ENV: "production"
    env_file:
      - ./frontend/.env

  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: Dockerfile
    image: pgadmin4
    container_name: pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - /etc/letsencrypt/live/pgadmin.db.ngnair.com:/certs:ro
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@fake.com
      PGADMIN_DEFAULT_PASSWORD: Heavy2Street$
    ports:
      - "8100:80"
    networks:
      compose_network:
        ipv4_address: 172.27.0.150

networks:
  compose_network:
    external: true
    ipam:
      config:
        - subnet: 172.27.0.0/16

volumes:
  postgres_data:
  frontend_data:
  backend_data:
  pgadmin_data:
